🔍 Excited to share my latest AI project: 𝗙𝗮𝗰𝗲𝗦𝘆𝗻𝗰 - 𝗔 𝗗𝗲𝗲𝗽 𝗟𝗲𝗮𝗿𝗻𝗶𝗻𝗴 𝗙𝗮𝗰𝗲 𝗥𝗲𝗰𝗼𝗴𝗻𝗶𝘁𝗶𝗼𝗻 𝗦𝘆𝘀𝘁𝗲𝗺!



I've implemented a complete facial recognition system using deep learning techniques, based on the 𝗙𝗮𝗰𝗲𝗡𝗲𝘁 𝗳𝗿𝗮𝗺𝗲𝘄𝗼𝗿𝗸 originally 𝗱𝗲𝘃𝗲𝗹𝗼𝗽𝗲𝗱 𝗯𝘆 𝗿𝗲𝘀𝗲𝗮𝗿𝗰𝗵𝗲𝗿𝘀 𝗮𝘁 𝗚𝗼𝗼𝗴𝗹𝗲. My implementation uses 𝗜𝗻𝗰𝗲𝗽𝘁𝗶𝗼𝗻𝗥𝗲𝘀𝗻𝗲𝘁𝗩𝟭 architecture to generate 𝟱𝟭𝟮-𝗱𝗶𝗺𝗲𝗻𝘀𝗶𝗼𝗻𝗮𝗹 𝗳𝗮𝗰𝗶𝗮𝗹 𝗲𝗺𝗯𝗲𝗱𝗱𝗶𝗻𝗴𝘀, creating a compact mathematical representation of facial features.



🧠 𝗧𝗲𝗰𝗵𝗻𝗶𝗰𝗮𝗹 𝗢𝘃𝗲𝗿𝘃𝗶𝗲𝘄:

- 𝑨𝒓𝒄𝒉𝒊𝒕𝒆𝒄𝒕𝒖𝒓𝒆: InceptionResnetV1 CNN with residual connections

- 𝑭𝒂𝒄𝒆 𝑫𝒆𝒕𝒆𝒄𝒕𝒊𝒐𝒏: MTCNN (Multi-Task Cascaded Convolutional Networks) for precise face detection and alignment

- Activation Functions: Uses combination of ReLU in convolutional layers and softmax in the classification stage

- 𝑫𝒂𝒕𝒂𝒔𝒆𝒕: Trained on 𝗖𝗔𝗦𝗜𝗔-𝗪𝗲𝗯𝗙𝗮𝗰𝗲 𝗱𝗮𝘁𝗮𝘀𝗲𝘁 (𝟰𝟵𝟰,𝟰𝟭𝟰 𝗶𝗺𝗮𝗴𝗲𝘀 𝗮𝗰𝗿𝗼𝘀𝘀 𝟭𝟬,𝟱𝟳𝟱 𝗶𝗱𝗲𝗻𝘁𝗶𝘁𝗶𝗲𝘀)

- 𝑻𝒓𝒂𝒊𝒏𝒊𝒏𝒈 𝑴𝒆𝒕𝒓𝒊𝒄𝒔: Achieved 84% accuracy after 5 epochs on Google Colab's T4 GPU

- 𝑳𝒐𝒔𝒔 𝑭𝒖𝒏𝒄𝒕𝒊𝒐𝒏𝒔: 𝗖𝗿𝗼𝘀𝘀𝗘𝗻𝘁𝗿𝗼𝗽𝘆𝗟𝗼𝘀𝘀 for training classification, embedding similarity for inference



💻 𝗪𝗵𝗮𝘁 𝗺𝗮𝗸𝗲𝘀 𝘁𝗵𝗶𝘀 𝗽𝗿𝗼𝗷𝗲𝗰𝘁 𝘀𝗽𝗲𝗰𝗶𝗮𝗹:

1. While the original 𝗙𝗮𝗰𝗲𝗡𝗲𝘁 𝘂𝘀𝗲𝘀 𝘁𝗿𝗶𝗽𝗹𝗲𝘁 𝗹𝗼𝘀𝘀 to ensure that embeddings of the same person are close together and different people far apart, I've used a 𝗵𝘆𝗯𝗿𝗶𝗱 𝗮𝗽𝗽𝗿𝗼𝗮𝗰𝗵 - training with 𝗖𝗿𝗼𝘀𝘀𝗘𝗻𝘁𝗿𝗼𝗽𝘆𝗟𝗼𝘀𝘀 and verification with 𝗰𝗼𝘀𝗶𝗻𝗲 𝘀𝗶𝗺𝗶𝗹𝗮𝗿𝗶𝘁𝘆.



2. I trained the model myself using a subset of CASIA-WebFace (limiting to 100 images per identity) which took about 𝟲 𝗵𝗼𝘂𝗿𝘀 on Google Colab's T4 GPU.



3. The system includes a complete user interface for face registration and verification, optimized for both training on the cloud and inference on local devices.



🚀 𝗛𝗼𝘄 𝗶𝘁 𝘄𝗼𝗿𝗸𝘀:

When registering a face, the system captures multiple samples and averages their embeddings for robustness. For verification, it:

1. Detects faces using 𝗠𝗧𝗖𝗡𝗡

2. Extracts the 512-dimensional embedding from the face image

3. Compares the embedding with stored reference embeddings using cosine similarity

4. 𝗔𝘂𝘁𝗵𝗲𝗻𝘁𝗶𝗰𝗮𝘁𝗲𝘀 the user if the similarity exceeds the threshold (0.6)



The project includes both a pre-trained model version and my custom-trained implementation, demonstrating the effectiveness of transfer learning versus domain-specific training.



Check out the complete project on GitHub: 

https://github.com/Abdullah-Mian/FaceSync.git



Dataset: https://www.kaggle.com/datasets/debarghamitraroy/casia-webface



Would love to hear your thoughts or answer any questions about the implementation details!



#SemesterProject #ArtificialIntelligence #AI #FacialRecognition #DeepLearning #ComputerVision
